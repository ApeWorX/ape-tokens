from ape.contracts import ContractContainer
from ethpm_types import ContractType

TEST_ERC20 = ContractType.model_validate(
    {
        "contractName": "TestToken",
        "sourceId": "contracts/TestStable.sol",
        "deploymentBytecode": {
            "bytecode": "0x610160604052348015610010575f5ffd5b506040516115ad3803806115ad83398101604081905261002f916102f3565b6040518060400160405280600c81526020016b546f6b656e20537461626c6560a01b81525080604051806040016040528060018152602001603160f81b81525086868681600390816100819190610411565b50600461008e8282610411565b5050506001600160a01b0381166100bf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c881610196565b506100d48260066101e7565b610120526100e38160076101e7565b61014052815160208084019190912060e052815190820120610100524660a05261016f60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506009805460ff191660ff9290921691909117905550610523915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602083511015610202576101fb83610219565b9050610213565b8161020d8482610411565b5060ff90505b92915050565b5f5f829050601f81511115610243578260405163305a27a960e01b81526004016100b691906104cb565b805161024e82610500565b179392505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610279575f5ffd5b81516001600160401b0381111561029257610292610256565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102c0576102c0610256565b6040528181528382016020018510156102d7575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610306575f5ffd5b84516001600160a01b038116811461031c575f5ffd5b60208601519094506001600160401b03811115610337575f5ffd5b6103438782880161026a565b604087015190945090506001600160401b03811115610360575f5ffd5b61036c8782880161026a565b925050606085015160ff81168114610382575f5ffd5b939692955090935050565b600181811c908216806103a157607f821691505b6020821081036103bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561040c57805f5260205f20601f840160051c810160208510156103ea5750805b601f840160051c820191505b81811015610409575f81556001016103f6565b50505b505050565b81516001600160401b0381111561042a5761042a610256565b61043e81610438845461038d565b846103c5565b6020601f821160018114610470575f83156104595750848201515b5f19600385901b1c1916600184901b178455610409565b5f84815260208120601f198516915b8281101561049f578785015182556020948501946001909201910161047f565b50848210156104bc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156103bf575f1960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516110396105745f395f61088401525f61085701525f61074e01525f61072601525f61068101525f6106ab01525f6106d501526110395ff3fe608060405234801561000f575f5ffd5b5060043610610106575f3560e01c8063715018a61161009e57806395d89b411161006e57806395d89b411461021b578063a9059cbb14610223578063d505accf14610236578063dd62ed3e14610249578063f2fde38b14610281575f5ffd5b8063715018a6146101ca5780637ecebe00146101d257806384b0196e146101e55780638da5cb5b14610200575f5ffd5b8063313ce567116100d9578063313ce567146101705780633644e5151461018557806340c10f191461018d57806370a08231146101a2575f5ffd5b806306fdde031461010a578063095ea7b31461012857806318160ddd1461014b57806323b872dd1461015d575b5f5ffd5b610112610294565b60405161011f9190610db5565b60405180910390f35b61013b610136366004610de9565b610324565b604051901515815260200161011f565b6002545b60405190815260200161011f565b61013b61016b366004610e11565b61033d565b60095460405160ff909116815260200161011f565b61014f610360565b6101a061019b366004610de9565b61036e565b005b61014f6101b0366004610e4b565b6001600160a01b03165f9081526020819052604090205490565b6101a0610384565b61014f6101e0366004610e4b565b610397565b6101ed6103b4565b60405161011f9796959493929190610e64565b6005546040516001600160a01b03909116815260200161011f565b6101126103f6565b61013b610231366004610de9565b610405565b6101a0610244366004610efa565b610412565b61014f610257366004610f67565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101a061028f366004610e4b565b61054d565b6060600380546102a390610f98565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf90610f98565b801561031a5780601f106102f15761010080835404028352916020019161031a565b820191905f5260205f20905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b5f3361033181858561058a565b60019150505b92915050565b5f3361034a85828561059c565b610355858585610618565b506001949350505050565b5f610369610675565b905090565b61037661079e565b61038082826107cb565b5050565b61038c61079e565b6103955f6107ff565b565b6001600160a01b0381165f90815260086020526040812054610337565b5f6060805f5f5f60606103c5610850565b6103cd61087d565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102a390610f98565b5f33610331818585610618565b8342111561043b5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104868c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6104e0826108aa565b90505f6104ef828787876108d6565b9050896001600160a01b0316816001600160a01b031614610536576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610432565b6105418a8a8a61058a565b50505050505050505050565b61055561079e565b6001600160a01b03811661057e57604051631e4fbdf760e01b81525f6004820152602401610432565b610587816107ff565b50565b6105978383836001610902565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610612578181101561060457604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610432565b61061284848484035f610902565b50505050565b6001600160a01b03831661064157604051634b637e8f60e11b81525f6004820152602401610432565b6001600160a01b03821661066a5760405163ec442f0560e01b81525f6004820152602401610432565b6105978383836109d4565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156106cd57507f000000000000000000000000000000000000000000000000000000000000000046145b156106f757507f000000000000000000000000000000000000000000000000000000000000000090565b610369604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b031633146103955760405163118cdaa760e01b8152336004820152602401610432565b6001600160a01b0382166107f45760405163ec442f0560e01b81525f6004820152602401610432565b6103805f83836109d4565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b60606103697f00000000000000000000000000000000000000000000000000000000000000006006610afa565b60606103697f00000000000000000000000000000000000000000000000000000000000000006007610afa565b5f6103376108b6610675565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f6108e688888888610ba3565b9250925092506108f68282610c6b565b50909695505050505050565b6001600160a01b03841661092b5760405163e602df0560e01b81525f6004820152602401610432565b6001600160a01b03831661095457604051634a1406b160e11b81525f6004820152602401610432565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561061257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109c691815260200190565b60405180910390a350505050565b6001600160a01b0383166109fe578060025f8282546109f39190610fd0565b90915550610a6e9050565b6001600160a01b0383165f9081526020819052604090205481811015610a505760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610432565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610a8a57600280548290039055610aa8565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aed91815260200190565b60405180910390a3505050565b606060ff8314610b1457610b0d83610d23565b9050610337565b818054610b2090610f98565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4c90610f98565b8015610b975780601f10610b6e57610100808354040283529160200191610b97565b820191905f5260205f20905b815481529060010190602001808311610b7a57829003601f168201915b50505050509050610337565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610bdc57505f91506003905082610c61565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c2d573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116610c5857505f925060019150829050610c61565b92505f91508190505b9450945094915050565b5f826003811115610c7e57610c7e610fef565b03610c87575050565b6001826003811115610c9b57610c9b610fef565b03610cb95760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610ccd57610ccd610fef565b03610cee5760405163fce698f760e01b815260048101829052602401610432565b6003826003811115610d0257610d02610fef565b03610380576040516335e2f38360e21b815260048101829052602401610432565b60605f610d2f83610d60565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f81111561033757604051632cd44ac360e21b815260040160405180910390fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610dc76020830184610d87565b9392505050565b80356001600160a01b0381168114610de4575f5ffd5b919050565b5f5f60408385031215610dfa575f5ffd5b610e0383610dce565b946020939093013593505050565b5f5f5f60608486031215610e23575f5ffd5b610e2c84610dce565b9250610e3a60208501610dce565b929592945050506040919091013590565b5f60208284031215610e5b575f5ffd5b610dc782610dce565b60ff60f81b8816815260e060208201525f610e8260e0830189610d87565b8281036040840152610e948189610d87565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b81811015610ee9578351835260209384019390920191600101610ecb565b50909b9a5050505050505050505050565b5f5f5f5f5f5f5f60e0888a031215610f10575f5ffd5b610f1988610dce565b9650610f2760208901610dce565b95506040880135945060608801359350608088013560ff81168114610f4a575f5ffd5b9699959850939692959460a0840135945060c09093013592915050565b5f5f60408385031215610f78575f5ffd5b610f8183610dce565b9150610f8f60208401610dce565b90509250929050565b600181811c90821680610fac57607f821691505b602082108103610fca57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561033757634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffdfea26469706673582212205628de94ccd0775bfd316c0f80cb0f592008c0ad79b50e95cc6f964d5bf4b16064736f6c634300081c0033"
        },
        "runtimeBytecode": {
            "bytecode": ""
        },
        "abi": [
            {
                "type": "constructor",
                "stateMutability": "nonpayable",
                "inputs": [
                    {"name": "initialOwner", "type": "address", "internalType": "address"},
                    {"name": "name", "type": "string", "internalType": "string"},
                    {"name": "symbol", "type": "string", "internalType": "string"},
                    {"name": "decimals_", "type": "uint8", "internalType": "uint8"},
                ],
            },
            {"type": "error", "name": "ECDSAInvalidSignature", "inputs": []},
            {
                "type": "error",
                "name": "ECDSAInvalidSignatureLength",
                "inputs": [{"name": "length", "type": "uint256", "internalType": "uint256"}],
            },
            {
                "type": "error",
                "name": "ECDSAInvalidSignatureS",
                "inputs": [{"name": "s", "type": "bytes32", "internalType": "bytes32"}],
            },
            {
                "type": "error",
                "name": "ERC20InsufficientAllowance",
                "inputs": [
                    {"name": "spender", "type": "address", "internalType": "address"},
                    {"name": "allowance", "type": "uint256", "internalType": "uint256"},
                    {"name": "needed", "type": "uint256", "internalType": "uint256"},
                ],
            },
            {
                "type": "error",
                "name": "ERC20InsufficientBalance",
                "inputs": [
                    {"name": "sender", "type": "address", "internalType": "address"},
                    {"name": "balance", "type": "uint256", "internalType": "uint256"},
                    {"name": "needed", "type": "uint256", "internalType": "uint256"},
                ],
            },
            {
                "type": "error",
                "name": "ERC20InvalidApprover",
                "inputs": [{"name": "approver", "type": "address", "internalType": "address"}],
            },
            {
                "type": "error",
                "name": "ERC20InvalidReceiver",
                "inputs": [{"name": "receiver", "type": "address", "internalType": "address"}],
            },
            {
                "type": "error",
                "name": "ERC20InvalidSender",
                "inputs": [{"name": "sender", "type": "address", "internalType": "address"}],
            },
            {
                "type": "error",
                "name": "ERC20InvalidSpender",
                "inputs": [{"name": "spender", "type": "address", "internalType": "address"}],
            },
            {
                "type": "error",
                "name": "ERC2612ExpiredSignature",
                "inputs": [{"name": "deadline", "type": "uint256", "internalType": "uint256"}],
            },
            {
                "type": "error",
                "name": "ERC2612InvalidSigner",
                "inputs": [
                    {"name": "signer", "type": "address", "internalType": "address"},
                    {"name": "owner", "type": "address", "internalType": "address"},
                ],
            },
            {
                "type": "error",
                "name": "InvalidAccountNonce",
                "inputs": [
                    {"name": "account", "type": "address", "internalType": "address"},
                    {"name": "currentNonce", "type": "uint256", "internalType": "uint256"},
                ],
            },
            {"type": "error", "name": "InvalidShortString", "inputs": []},
            {
                "type": "error",
                "name": "OwnableInvalidOwner",
                "inputs": [{"name": "owner", "type": "address", "internalType": "address"}],
            },
            {
                "type": "error",
                "name": "OwnableUnauthorizedAccount",
                "inputs": [{"name": "account", "type": "address", "internalType": "address"}],
            },
            {
                "type": "error",
                "name": "StringTooLong",
                "inputs": [{"name": "str", "type": "string", "internalType": "string"}],
            },
            {
                "type": "event",
                "name": "Approval",
                "inputs": [
                    {
                        "name": "owner",
                        "type": "address",
                        "internalType": "address",
                        "indexed": True,
                    },
                    {
                        "name": "spender",
                        "type": "address",
                        "internalType": "address",
                        "indexed": True,
                    },
                    {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256",
                        "indexed": False,
                    },
                ],
                "anonymous": False,
            },
            {"type": "event", "name": "EIP712DomainChanged", "inputs": [], "anonymous": False},
            {
                "type": "event",
                "name": "OwnershipTransferred",
                "inputs": [
                    {
                        "name": "previousOwner",
                        "type": "address",
                        "internalType": "address",
                        "indexed": True,
                    },
                    {
                        "name": "newOwner",
                        "type": "address",
                        "internalType": "address",
                        "indexed": True,
                    },
                ],
                "anonymous": False,
            },
            {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                    {"name": "from", "type": "address", "internalType": "address", "indexed": True},
                    {"name": "to", "type": "address", "internalType": "address", "indexed": True},
                    {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256",
                        "indexed": False,
                    },
                ],
                "anonymous": False,
            },
            {
                "type": "function",
                "name": "DOMAIN_SEPARATOR",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [{"name": "", "type": "bytes32", "internalType": "bytes32"}],
            },
            {
                "type": "function",
                "name": "allowance",
                "stateMutability": "view",
                "inputs": [
                    {"name": "owner", "type": "address", "internalType": "address"},
                    {"name": "spender", "type": "address", "internalType": "address"},
                ],
                "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}],
            },
            {
                "type": "function",
                "name": "approve",
                "stateMutability": "nonpayable",
                "inputs": [
                    {"name": "spender", "type": "address", "internalType": "address"},
                    {"name": "value", "type": "uint256", "internalType": "uint256"},
                ],
                "outputs": [{"name": "", "type": "bool", "internalType": "bool"}],
            },
            {
                "type": "function",
                "name": "balanceOf",
                "stateMutability": "view",
                "inputs": [{"name": "account", "type": "address", "internalType": "address"}],
                "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}],
            },
            {
                "type": "function",
                "name": "decimals",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [{"name": "", "type": "uint8", "internalType": "uint8"}],
            },
            {
                "type": "function",
                "name": "eip712Domain",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [
                    {"name": "fields", "type": "bytes1", "internalType": "bytes1"},
                    {"name": "name", "type": "string", "internalType": "string"},
                    {"name": "version", "type": "string", "internalType": "string"},
                    {"name": "chainId", "type": "uint256", "internalType": "uint256"},
                    {"name": "verifyingContract", "type": "address", "internalType": "address"},
                    {"name": "salt", "type": "bytes32", "internalType": "bytes32"},
                    {"name": "extensions", "type": "uint256[]", "internalType": "uint256[]"},
                ],
            },
            {
                "type": "function",
                "name": "mint",
                "stateMutability": "nonpayable",
                "inputs": [
                    {"name": "to", "type": "address", "internalType": "address"},
                    {"name": "amount", "type": "uint256", "internalType": "uint256"},
                ],
                "outputs": [],
            },
            {
                "type": "function",
                "name": "name",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [{"name": "", "type": "string", "internalType": "string"}],
            },
            {
                "type": "function",
                "name": "nonces",
                "stateMutability": "view",
                "inputs": [{"name": "owner", "type": "address", "internalType": "address"}],
                "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}],
            },
            {
                "type": "function",
                "name": "owner",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [{"name": "", "type": "address", "internalType": "address"}],
            },
            {
                "type": "function",
                "name": "permit",
                "stateMutability": "nonpayable",
                "inputs": [
                    {"name": "owner", "type": "address", "internalType": "address"},
                    {"name": "spender", "type": "address", "internalType": "address"},
                    {"name": "value", "type": "uint256", "internalType": "uint256"},
                    {"name": "deadline", "type": "uint256", "internalType": "uint256"},
                    {"name": "v", "type": "uint8", "internalType": "uint8"},
                    {"name": "r", "type": "bytes32", "internalType": "bytes32"},
                    {"name": "s", "type": "bytes32", "internalType": "bytes32"},
                ],
                "outputs": [],
            },
            {
                "type": "function",
                "name": "renounceOwnership",
                "stateMutability": "nonpayable",
                "inputs": [],
                "outputs": [],
            },
            {
                "type": "function",
                "name": "symbol",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [{"name": "", "type": "string", "internalType": "string"}],
            },
            {
                "type": "function",
                "name": "totalSupply",
                "stateMutability": "view",
                "inputs": [],
                "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}],
            },
            {
                "type": "function",
                "name": "transfer",
                "stateMutability": "nonpayable",
                "inputs": [
                    {"name": "to", "type": "address", "internalType": "address"},
                    {"name": "value", "type": "uint256", "internalType": "uint256"},
                ],
                "outputs": [{"name": "", "type": "bool", "internalType": "bool"}],
            },
            {
                "type": "function",
                "name": "transferFrom",
                "stateMutability": "nonpayable",
                "inputs": [
                    {"name": "from", "type": "address", "internalType": "address"},
                    {"name": "to", "type": "address", "internalType": "address"},
                    {"name": "value", "type": "uint256", "internalType": "uint256"},
                ],
                "outputs": [{"name": "", "type": "bool", "internalType": "bool"}],
            },
            {
                "type": "function",
                "name": "transferOwnership",
                "stateMutability": "nonpayable",
                "inputs": [{"name": "newOwner", "type": "address", "internalType": "address"}],
                "outputs": [],
            },
        ],
        "sourcemap": "307:568:20:-:0;;;399:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:5;;;;;;;;;;;;;-1:-1:-1;;;1577:52:5;;;1616:4;3328:431:15;;;;;;;;;;;;;-1:-1:-1;;;3328:431:15;;;574:12:20;544:4;550:6;1675:5:3;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:3;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4417:51:21;4390:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:15;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4738:25:21;4779:18;;;4772:34;;;;4822:18;;;4815:34;4255:13:15;4865:18:21;;;4858:34;4278:4:15;4908:19:21;;;4901:61;4168:7:15;;4710:19:21;;4204:80:15;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:15;3725:27;;-1:-1:-1;638:15:20::3;:27:::0;;-1:-1:-1;;638:27:20::3;;::::0;;;::::3;::::0;;;::::3;::::0;;-1:-1:-1;307:568:20;;-1:-1:-1;;307:568:20;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:11:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:11;;-1:-1:-1;3006:215:11;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:11;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:11:o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:21;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:21;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:21;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:21;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:21:o;874:883::-;989:6;997;1005;1013;1066:3;1054:9;1045:7;1041:23;1037:33;1034:53;;;1083:1;1080;1073:12;1034:53;1109:16;;-1:-1:-1;;;;;1154:31:21;;1144:42;;1134:70;;1200:1;1197;1190:12;1134:70;1272:2;1257:18;;1251:25;1223:5;;-1:-1:-1;;;;;;1288:30:21;;1285:50;;;1331:1;1328;1321:12;1285:50;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1461:2;1446:18;;1440:25;1344:71;;-1:-1:-1;1440:25:21;-1:-1:-1;;;;;;1477:32:21;;1474:52;;;1522:1;1519;1512:12;1474:52;1545:63;1600:7;1589:8;1578:9;1574:24;1545:63;:::i;:::-;1535:73;;;1653:2;1642:9;1638:18;1632:25;1701:4;1692:7;1688:18;1679:7;1676:31;1666:59;;1721:1;1718;1711:12;1666:59;874:883;;;;-1:-1:-1;874:883:21;;-1:-1:-1;;874:883:21:o;1762:380::-;1841:1;1837:12;;;;1884;;;1905:61;;1959:4;1951:6;1947:17;1937:27;;1905:61;2012:2;2004:6;2001:14;1981:18;1978:38;1975:161;;2058:10;2053:3;2049:20;2046:1;2039:31;2093:4;2090:1;2083:15;2121:4;2118:1;2111:15;1975:161;;1762:380;;;:::o;2273:518::-;2375:2;2370:3;2367:11;2364:421;;;2411:5;2408:1;2401:16;2455:4;2452:1;2442:18;2525:2;2513:10;2509:19;2506:1;2502:27;2496:4;2492:38;2561:4;2549:10;2546:20;2543:47;;;-1:-1:-1;2584:4:21;2543:47;2639:2;2634:3;2630:12;2627:1;2623:20;2617:4;2613:31;2603:41;;2694:81;2712:2;2705:5;2702:13;2694:81;;;2771:1;2757:16;;2738:1;2727:13;2694:81;;;2698:3;;2364:421;2273:518;;;:::o;2967:1299::-;3087:10;;-1:-1:-1;;;;;3109:30:21;;3106:56;;;3142:18;;:::i;:::-;3171:97;3261:6;3221:38;3253:4;3247:11;3221:38;:::i;:::-;3215:4;3171:97;:::i;:::-;3317:4;3348:2;3337:14;;3365:1;3360:649;;;;4053:1;4070:6;4067:89;;;-1:-1:-1;4122:19:21;;;4116:26;4067:89;-1:-1:-1;;2924:1:21;2920:11;;;2916:24;2912:29;2902:40;2948:1;2944:11;;;2899:57;4169:81;;3330:930;;3360:649;2220:1;2213:14;;;2257:4;2244:18;;-1:-1:-1;;3396:20:21;;;3514:222;3528:7;3525:1;3522:14;3514:222;;;3610:19;;;3604:26;3589:42;;3717:4;3702:20;;;;3670:1;3658:14;;;;3544:12;3514:222;;;3518:3;3764:6;3755:7;3752:19;3749:201;;;3825:19;;;3819:26;-1:-1:-1;;3908:1:21;3904:14;;;3920:3;3900:24;3896:37;3892:42;3877:58;3862:74;;3749:201;-1:-1:-1;;;;3996:1:21;3980:14;;;3976:22;3963:36;;-1:-1:-1;2967:1299:21:o;4973:418::-;5122:2;5111:9;5104:21;5085:4;5154:6;5148:13;5197:6;5192:2;5181:9;5177:18;5170:34;5256:6;5251:2;5243:6;5239:15;5234:2;5223:9;5219:18;5213:50;5312:1;5307:2;5298:6;5287:9;5283:22;5279:31;5272:42;5382:2;5375;5371:7;5366:2;5358:6;5354:15;5350:29;5339:9;5335:45;5331:54;5323:62;;;4973:418;;;;:::o;5396:297::-;5514:12;;5561:4;5550:16;;;5544:23;;5514:12;5579:16;;5576:111;;;-1:-1:-1;;5653:4:21;5649:17;;;;5646:1;5642:25;5638:38;5627:50;;5396:297;-1:-1:-1;5396:297:21:o;:::-;307:568:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "userdoc": {"kind": "user", "methods": {}, "version": 1},
        "devdoc": {
            "errors": {
                "ECDSAInvalidSignature()": [{"details": "The signature derives the `address(0)`."}],
                "ECDSAInvalidSignatureLength(uint256)": [
                    {"details": "The signature has an invalid length."}
                ],
                "ECDSAInvalidSignatureS(bytes32)": [
                    {"details": "The signature has an S value that is in the upper half order."}
                ],
                "ERC20InsufficientAllowance(address,uint256,uint256)": [
                    {
                        "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                        "params": {
                            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                            "needed": "Minimum amount required to perform a transfer.",
                            "spender": "Address that may be allowed to operate on tokens without being their owner.",
                        },
                    }
                ],
                "ERC20InsufficientBalance(address,uint256,uint256)": [
                    {
                        "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                        "params": {
                            "balance": "Current balance for the interacting account.",
                            "needed": "Minimum amount required to perform a transfer.",
                            "sender": "Address whose tokens are being transferred.",
                        },
                    }
                ],
                "ERC20InvalidApprover(address)": [
                    {
                        "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                        "params": {"approver": "Address initiating an approval operation."},
                    }
                ],
                "ERC20InvalidReceiver(address)": [
                    {
                        "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                        "params": {"receiver": "Address to which tokens are being transferred."},
                    }
                ],
                "ERC20InvalidSender(address)": [
                    {
                        "details": "Indicates a failure with the token `sender`. Used in transfers.",
                        "params": {"sender": "Address whose tokens are being transferred."},
                    }
                ],
                "ERC20InvalidSpender(address)": [
                    {
                        "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                        "params": {
                            "spender": "Address that may be allowed to operate on tokens without being their owner."
                        },
                    }
                ],
                "ERC2612ExpiredSignature(uint256)": [{"details": "Permit deadline has expired."}],
                "ERC2612InvalidSigner(address,address)": [{"details": "Mismatched signature."}],
                "InvalidAccountNonce(address,uint256)": [
                    {
                        "details": "The nonce used for an `account` is not the expected current nonce."
                    }
                ],
                "OwnableInvalidOwner(address)": [
                    {"details": "The owner is not a valid owner account. (eg. `address(0)`)"}
                ],
                "OwnableUnauthorizedAccount(address)": [
                    {"details": "The caller account is not authorized to perform an operation."}
                ],
            },
            "events": {
                "Approval(address,address,uint256)": {
                    "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
                },
                "EIP712DomainChanged()": {
                    "details": "MAY be emitted to signal that the domain could have changed."
                },
                "Transfer(address,address,uint256)": {
                    "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
                },
            },
            "kind": "dev",
            "methods": {
                "DOMAIN_SEPARATOR()": {
                    "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                },
                "allowance(address,address)": {"details": "See {IERC20-allowance}."},
                "approve(address,uint256)": {
                    "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                },
                "balanceOf(address)": {"details": "See {IERC20-balanceOf}."},
                "decimals()": {
                    "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                },
                "eip712Domain()": {"details": "See {IERC-5267}."},
                "name()": {"details": "Returns the name of the token."},
                "nonces(address)": {
                    "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
                },
                "owner()": {"details": "Returns the address of the current owner."},
                "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                    "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
                },
                "renounceOwnership()": {
                    "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                },
                "symbol()": {
                    "details": "Returns the symbol of the token, usually a shorter version of the name."
                },
                "totalSupply()": {"details": "See {IERC20-totalSupply}."},
                "transfer(address,uint256)": {
                    "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                },
                "transferFrom(address,address,uint256)": {
                    "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                },
                "transferOwnership(address)": {
                    "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                },
            },
            "version": 1,
        },
        "methodIdentifiers": {
            "DOMAIN_SEPARATOR()": "0x3644e515",
            "allowance(address,address)": "0xdd62ed3e",
            "approve(address,uint256)": "0x095ea7b3",
            "balanceOf(address)": "0x70a08231",
            "decimals()": "0x313ce567",
            "eip712Domain()": "0x84b0196e",
            "mint(address,uint256)": "0x40c10f19",
            "name()": "0x06fdde03",
            "nonces(address)": "0x7ecebe00",
            "owner()": "0x8da5cb5b",
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "0xd505accf",
            "renounceOwnership()": "0x715018a6",
            "symbol()": "0x95d89b41",
            "totalSupply()": "0x18160ddd",
            "transfer(address,uint256)": "0xa9059cbb",
            "transferFrom(address,address,uint256)": "0x23b872dd",
            "transferOwnership(address)": "0xf2fde38b",
        },
    }
)
MockERC20 = ContractContainer(contract_type=TEST_ERC20)
